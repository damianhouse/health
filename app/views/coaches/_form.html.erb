<%= form_for(@coach, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } }) do |f| %>

  <% if @coach.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@coach.errors.count, "error") %> prohibited this coach from being saved:</h2>

      <ul>
      <% @coach.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
  <div class="list-group-info active">

  <div class="field">
    <%= f.label :first %>*<br>
    <%= f.text_field :first, required: true %>
  </div>

  <div class="field">
    <%= f.label :last %>*<br>
    <%= f.text_field :last, required: true %>
  </div>

  <div class="field">
    <%= f.label :email %>*<br>
    <%= f.text_field :email %>
  </div>
</div>
  <div class="field">
    <!-- <%= f.label :password %><br>
    <%= f.password_field :password_digest %> -->

    <%= f.label :password %>* <br>
    <%= f.password_field :password, type: "password" %>
    <p class="smalltext">(Password must be at least 8 characters long.)</p>
  </div>

  <div class="field">
    <%= f.label :avatar_url %> <br>
    <%= f.file_field :avatar_url %>
  </div>

  <div class="field">
    <%= f.label :phone %>*<br>
    <%= f.telephone_field :phone, required: true, pattern: '^\d{10}$', placeholder: "Mobile Number", title: "format: xxxxxxxxxx" %>
    <p class="smalltext">(Please enter in the format: xxxxxxxxxx (no spaces, dashes, etc.))</p>
  </div>


  <div class="field">
    <%= f.label :zip %><br>
    <%= f.number_field :zip %>
  </div>

  <div class="field">
    <%= f.label :greeting %><br>
    <%= f.text_field :greeting %>
    <p class="smalltext">Please enter a custom greeting that will be automatically sent to your clients when they are assigned to you. This should include a personal introduction and some questions to get the conversation started. Feel free to include some info about your approach to health and wellness!</p>
  </div>

  <div class="field">
    <%= f.label :philosophy, "Personal Philosophy" %><br>
    <%= f.text_field :philosophy %>
    <p class="smalltext">Please include a brief personal philosophy about health that will show on your profile page.</p>
  </div>

  <!-- <div class="field">
    <%= f.label :role %><br>
    <%= f.text_field :role %>
  </div> -->
  <p class="smalltext">* = Required field</p>
  <div class="actions">
    <%= f.submit %>
  </div>

<!-- </div>
</fieldset>
</form> -->

<% end %>

<script>


$('document').fileupload(
    'option',
    'fileInput',
    $('input:file')
);


$(function() {
  $('.directUpload').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    console.log(fileInput);
  });
});


$(function() {
  $('.directUpload').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    fileInput.after(barContainer);
    fileInput.fileupload({
      fileInput:       fileInput,
      url:             form.data('url'),
      type:            'POST',
      autoUpload:       true,
      formData:         form.data('form-data'),
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });
});



</script>
